{"version":3,"sources":["queries/index.js","pages/Home/Home.js","pages/Signup/Signup.js","pages/Signin/Singin.js","App.js","index.js"],"names":["GET_ALL_RECIPES","gql","GET_CURRENT_USER","SIGNIN_USER","SIGNUP_USER","Home","query","data","loading","error","console","log","user","getCurrentUser","username","Signup","state","email","password","rePassword","formChange","target","setState","name","value","formSubmit","e","signUp","preventDefault","then","token","localStorage","setItem","validateForm","valid","this","mutation","variables","className","onSubmit","event","onChange","type","placeholder","message","disabled","Component","Signin","signIn","errorMessage","App","path","exact","component","HomePage","SignupPage","SigninPage","to","client","ApolloClient","uri","fetchOptions","credentials","request","operation","getItem","setContext","headers","authorization","onError","networkError","statusCode","removeItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47dc5dab.chunk.js","sourcesContent":["import { gql } from 'apollo-boost';\n\n\n/*Recipe Query */\nexport const GET_ALL_RECIPES = gql`\n\nquery{\n    getAllRecipes {\n        name\n        description\n        category\n        likes\n        instructions\n        createDate\n        \n    }\n}\n`;\n\n/*Recipe Mutation */\n\n/*User Query */\nexport const GET_CURRENT_USER = gql`\n\nquery {\n  getCurrentUser {\n    username\n  }\n}\n`;\n\n\n/*User Mutation */\n\nexport const SIGNIN_USER = gql`\n\nmutation($username: String!,$password:String!) {\n  signIn(username:$username, password: $password){\n    token\n  }\n}\n\n`;\n\nexport const SIGNUP_USER = gql`\n\nmutation($username: String!, $email: String!, $password: String!) {\n    signUp(username:$username,email:$email, password:$password){\n      token\n    }\n  }\n\n`;","import React from 'react'\nimport { Query } from 'react-apollo';\nimport { GET_ALL_RECIPES, GET_CURRENT_USER } from '../../queries'\n\nconst Home = () => {\n    return (\n        <div>\n            <Query query={GET_ALL_RECIPES}>\n                {\n                ({ data, loading, error}) => {\n                    if(loading) return <h1>Loading</h1>\n                    if(error) return <h1>Error</h1>\n                    console.log(data)\n                    return (\n                    <p>Recipes</p>\n                    )\n                }\n                }\n            </Query>\n            <Query query={GET_CURRENT_USER}>\n                {\n                ({ data, loading, error}) => {\n                    if(loading) return <h1>User Loading</h1>\n                    if(error) return <h1>User Error</h1>\n                    const user = data.getCurrentUser;\n                    return (\n                    <p>Username: {user?.username}</p>\n                    )\n                }\n                }\n            </Query>\n            \n        </div>\n    )\n}\nexport default Home;","import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo';\nimport { SIGNUP_USER } from '../../queries'\n\nexport default class Signup extends Component {\n    state = {\n        username:'',\n        email:'',\n        password:'',\n        rePassword:''\n    }\n    formChange = ({ target }) => {\n        this.setState({\n            [target.name]:target.value\n        })\n    }\n    formSubmit = (e, signUp) => {\n        e.preventDefault();\n        signUp().then(({data}) => {\n            console.log('token : ',data.signUp.token);\n            localStorage.setItem('token',data.signUp.token);\n        })\n    }\n    validateForm = () => {\n        const { username, email, password, rePassword } = this.state;\n        const valid = username && email && password && password===rePassword;\n        console.log(valid);\n        return valid;\n    }\n    render() {\n        const { username, email, password, rePassword } = this.state;\n        return (\n            <div>\n                <h2>Create New Account</h2>\n                <Mutation mutation={SIGNUP_USER} variables={{ username, email, password}}>\n                    {\n                        (signUp,{ data, loading, error}) => {\n                            return (\n                                <form className=\"form\" onSubmit={event=>this.formSubmit(event,signUp)}>\n                                    <input onChange={this.formChange} value={username} type=\"text\" name=\"username\" placeholder=\"Username\"/>\n                                    <input onChange={this.formChange} value={email} type=\"email\" name=\"email\" placeholder=\"Email Address\"/>\n                                    <input onChange={this.formChange} value={password} type=\"password\" name=\"password\" placeholder=\"Password\"/>\n                                    <input onChange={this.formChange} value={rePassword} type=\"password\" name=\"rePassword\" placeholder=\"Confirm Password\"/>\n                                    { error && error.message }\n                                    { loading && <p>Loading...</p> }\n                                    <input disabled={loading || !this.validateForm()} onChange={this.formChange} type=\"submit\" className=\"button-primary\" value=\"Submit\"/>\n                                </form>\n                            )\n                        }\n                    }\n                </Mutation>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo';\nimport { SIGNIN_USER } from '../../queries';\n\nexport default class Signin extends Component {\n    state = {\n        username:'',\n        password:'',\n    }\n    formChange = ({ target }) => {\n        this.setState({\n            [target.name]:target.value\n        })\n    }\n    formSubmit = (e, signIn) => {\n        e.preventDefault();\n        signIn().then(({data}) => {\n            console.log('token : ',data.signIn.token);\n            localStorage.setItem('token',data.signIn.token);\n        });\n    }\n    validateForm = () => {\n        const { username, password } = this.state;\n        const valid = username && password;\n        return valid;\n    }\n    render() {\n        const { username, password } = this.state;\n        return (\n            <div>\n                <h2>Signin to Your Account</h2>\n                <Mutation mutation={SIGNIN_USER} variables={{ username, password}}>\n                    {\n                        (signIn,{ data, loading, error}) => {\n                            let errorMessage = '';\n                            if(error){\n                                errorMessage = error.message;\n                            }\n                            return (\n                                <form className=\"form\" onSubmit={event=>this.formSubmit(event,signIn)}>\n                                    <input onChange={this.formChange} value={username} type=\"text\" name=\"username\" placeholder=\"Username\"/>\n                                    <input onChange={this.formChange} value={password} type=\"password\" name=\"password\" placeholder=\"Password\"/>\n                                    { <p>{errorMessage}</p> }\n                                    { loading && <p>Loading...</p> }\n                                    { data ? <p>data...</p> : ''}\n                                    <input disabled={loading || !this.validateForm()} onChange={this.formChange} type=\"submit\" className=\"button-primary\" value=\"Submit\"/>\n                                </form>\n                            )\n                        }\n                    }\n                </Mutation>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\n\nimport HomePage from './pages/Home/Home';\nimport SignupPage from './pages/Signup/Signup';\nimport SigninPage from './pages/Signin/Singin';\n\n\nconst App = () => (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={HomePage}/>\n          <Route path=\"/signup\" component={SignupPage}/>\n          <Route path=\"/signin\" component={SigninPage}/>\n          <Redirect to=\"/\"/>\n        </Switch>\n      </BrowserRouter>  \n    </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4567/graphql',\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: operation => {\n    const token = localStorage.getItem('token');\n    operation.setContext({\n      headers:{\n        authorization: token\n      }\n    })\n  },\n  onError: ({ networkError }) => {\n    if(networkError){\n      console.log('network Error from App.js')\n    }\n    if(networkError && networkError.statusCode === 401){\n      localStorage.removeItem('token');\n      console.log('You need to signin again!')\n    }\n  }\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}